# bindings generated by swig

# note:
# - by default the Perl module gets compiled, use `make LANG=<perl|python|java>` to specify target lang
# - libs may end up with the same name, so compiling for multiple langs at the same time isn't a good idea
# - most of the defs are OSX specific
# - modulepaths are handled differently for each platform, look into the src files of each to test

ODIR := build
MODULE := Lar

CXX ?= clang++
LD ?= ld
SWIG ?= swig
JAVAC ?= javac
LANG ?= perl

INCLUDES += -I../c_to_cpp/src
CXXFLAGS += $(INCLUDES)
LDFLAGS += -L../c_to_cpp/build -L../c_to_cpp/build/liblar
SWIGFLAGS := $(INCLUDES)

ifeq ($(LANG),python)
PYTHON_INCLUDES := $(shell python-config --includes)
PYTHON_PREFIX := $(shell python-config --prefix)
PYTHON_LIBS := $(shell python-config --libs)
TARGET := $(ODIR)/_$(MODULE).so
RUNCMD := PYTHONPATH=$(ODIR) ./python/lar_test.py
CXXFLAGS += -I$(PYTHON_INCLUDES)
LDFLAGS += -L$(PYTHON_PREFIX)/lib
LDFLAGS += -dylib -llar $(PYTHON_LIBS) -lc++ -lc
SWIGFLAGS += -python
else ifeq ($(LANG),java)
TARGET := $(ODIR)/lib$(MODULE).dylib $(ODIR)/Main.class
RUNCMD := java -cp $(ODIR) -Djava.library.path=./$(ODIR)/ Main
CXXFLAGS += -I/usr/local/Cellar/openjdk@11/11.0.10/include/
LDFLAGS += -dylib -llarc -llar -lc++ -lc
SWIGFLAGS += -java -c++
else
TARGET := $(ODIR)/lib$(MODULE).dylib
RUNCMD := ./perl/lar_test.pl
CXXFLAGS += -I/usr/local/lib/perl5/5.32.1/darwin-thread-multi-2level/CORE/
LDFLAGS += -L/usr/local/lib/perl5/5.32.1/darwin-thread-multi-2level/CORE/
LDFLAGS += -dylib -llarc -llar -lperl -lc++ -lc
SWIGFLAGS += -perl5
endif

all: $(TARGET)

run: $(TARGET)
	$(RUNCMD)

$(ODIR)/_$(MODULE).so: ../c_to_cpp/build/liblarc.a ../c_to_cpp/build/liblar/liblar.a $(ODIR)/$(MODULE)_$(LANG)_swig.o
	$(CXX) -shared $(ODIR)/$(MODULE)_$(LANG)_swig.o ../c_to_cpp/build/liblarc.a ../c_to_cpp/build/liblar/liblar.a -o $@ $(LDFLAGS)

$(ODIR)/lib$(MODULE).%: ../c_to_cpp/build/liblarc.a ../c_to_cpp/build/liblar/liblar.a $(ODIR)/$(MODULE)_$(LANG)_swig.o
	$(CXX) -shared $(ODIR)/$(MODULE)_$(LANG)_swig.o ../c_to_cpp/build/liblarc.a ../c_to_cpp/build/liblar/liblar.a -o $@ $(LDFLAGS)

$(ODIR)/$(MODULE)_$(LANG)_swig.o: $(ODIR)/$(MODULE)_$(LANG)_swig.cxx
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(ODIR)/$(MODULE)_$(LANG)_swig.cxx: swig/$(MODULE).i
	$(SWIG) $(SWIGFLAGS) -o $@ $<

$(ODIR)/$(MODULE).class: $(ODIR)/$(MODULE).java
	$(JAVAC) -d $(ODIR) $<
	
$(ODIR)/$(MODULE)JNI.class: $(ODIR)/$(MODULE)JNI.java
	$(JAVAC) -d $(ODIR) $<

$(ODIR)/Main.class: java/Main.java
	$(JAVAC) -cp $(ODIR) -d $(ODIR) $<


.PHONY: clean
clean:
	$(RM) $(ODIR)/*

